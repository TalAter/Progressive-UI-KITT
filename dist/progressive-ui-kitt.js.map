{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/progressive-ui-kitt.js"],"names":["_stylesheet","_stylesheetNode","_guiNodes","_debugState","_debugStyle","_messages","_listenersRegistered","_logMessage","text","extraParameters","indexOf","console","log","_guiCreated","undefined","_updateStylesheet","href","document","createElement","rel","id","body","appendChild","_createGUI","innerHTML","style","display","_addMessage","contents","options","messageId","length","Date","now","newMessageNode","classList","add","newMessage","push","setTimeout","isFinite","hideAfter","remove","parentNode","removeChild","_messageListener","event","data","action","msg","_registerListeners","navigator","serviceWorker","addEventListener","_deleteMessageFromDOM","msgID","node","getElementById","vroom","this","render","setStylesheet","stylesheet","deleteMessages","message","shift","deleteMessage","messagesLength","filter","addMessage","hide","show","debug","newState","arguments","module","exports"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n<!--\nProgressive UI KITT\nversion : 0.0.1\nauthor  : Tal Ater @TalAter\nlicense : MIT\nhttps://github.com/TalAter/Progressive-UI-KITT\n-->\n*/\n\n\"use strict\";\n\nvar _stylesheet;\nvar _stylesheetNode;\nvar _guiNodes;\nvar _debugState = false;\nvar _debugStyle = 'font-weight: bold; color: #00f;';\nvar _messages = [];\nvar _listenersRegistered = false;\n\n// method for logging to the console if debug mode is on\nvar _logMessage = function(text, extraParameters) {\n  if (!_debugState) {\n    return;\n  }\n  if (text.indexOf('%c') === -1 && !extraParameters) {\n    console.log(text);\n  } else {\n    extraParameters = extraParameters || _debugStyle;\n    console.log(text, extraParameters);\n  }\n};\n\n// Checks if GUI was already created\nvar _guiCreated = function () {\n  return _guiNodes !== undefined;\n};\n\n// Attach a style sheet if GUI already attached, if already attached, update it's href\nvar _updateStylesheet = function() {\n  if (_stylesheet && _guiCreated()) {\n    if (_stylesheetNode) {\n      _stylesheetNode.href = _stylesheet;\n    } else {\n      _stylesheetNode = document.createElement('link');\n      _stylesheetNode.rel = 'stylesheet';\n      _stylesheetNode.href = _stylesheet;\n      _stylesheetNode.id = 'progressivekitt-style-sheet';\n      document.body.appendChild(_stylesheetNode);\n    }\n  }\n};\n\n// Called once to generate the GUI nodes\nvar _createGUI = function() {\n  // create GUI\n  _guiNodes = document.createElement('div');\n  _guiNodes.id = 'progressivekitt-ui';\n  _guiNodes.innerHTML = '';\n  _guiNodes.style.display = 'none';\n  document.body.appendChild(_guiNodes);\n\n  _updateStylesheet();\n};\n\n// Adds a new message and draws it\nvar _addMessage = function(contents, options) {\n  if (!_guiCreated()) {\n    return;\n  }\n  if (typeof contents !== 'string') {\n    return;\n  }\n  options = options || {};\n  if (typeof options !== 'object') {\n    _logMessage('Invalid options object');\n  }\n\n  var messageId = _messages.length+Date.now();\n\n  var newMessageNode = document.createElement('div');\n  newMessageNode.id = 'progressivekitt-message-'+messageId;\n  newMessageNode.innerHTML = contents;\n  newMessageNode.classList.add('progressivekitt-message');\n\n  var newMessage = {\n    id: messageId,\n    contents: contents\n  };\n\n  _messages.push(newMessage);\n\n  _guiNodes.appendChild(newMessageNode);\n\n  setTimeout(function() {\n    newMessageNode.classList.add('progressivekitt-message--shown');\n  }, 1);\n\n  if (isFinite(options.hideAfter) && options.hideAfter > 0) {\n    setTimeout(function() {\n      newMessageNode.classList.remove('progressivekitt-message--shown');\n      setTimeout(function() {\n        // @TODO: Refactor to _deleteMessage method\n        if (newMessageNode && newMessageNode.parentNode) {\n          newMessageNode.parentNode.removeChild(newMessageNode);\n        }\n      }, 1000);\n    }, options.hideAfter);\n  }\n\n  return messageId;\n};\n\n// A listener used to parse messages posted from the service worker\nvar _messageListener = function(event) {\n  if (typeof event.data === 'object' && event.data.action === 'pkitt-message') {\n    _addMessage(event.data.msg);\n  }\n};\n\n// Register event listener for messages posted from the service worker\nvar _registerListeners = function() {\n  if (_listenersRegistered) {\n    return;\n  }\n  if('serviceWorker' in navigator){\n    navigator.serviceWorker.addEventListener('message', _messageListener);\n    _listenersRegistered = true;\n  }\n};\n\nvar _deleteMessageFromDOM = function(msgID) {\n  var node = document.getElementById('progressivekitt-message-'+msgID);\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n};\n\n/**\n * Call after configuring KITT, to render its interface.\n *\n * Identical to calling `ProgressiveKITT.render();` but less magical.\n *\n * @method vroom\n * @see [render()](#render)\n */\nvar vroom = function() {\n  this.render();\n};\n\n\n/**\n * Call after configuring KITT, to render its interface.\n *\n * @method render\n */\nvar render = function() {\n  _registerListeners();\n\n  if (!_guiCreated()) {\n    _createGUI();\n  }\n};\n\n\n/**\n * Set the URL for the stylesheet for the UI\n *\n * If a stylesheet was previously set, calling this again will update the\n * interface with a new stylesheet (if the interface was already rendered,\n * it will be updated)\n *\n * @param string stylesheet relative or absolute url to the stylesheet\n * @method setStylesheet\n */\nvar setStylesheet = function(stylesheet) {\n  _stylesheet = stylesheet;\n  _updateStylesheet();\n};\n\n/**\n * Deletes all existing messages from KITT and removes them from the DOM\n *\n * @method deleteMessages\n */\nvar deleteMessages = function() {\n  var message;\n  while ((message = _messages.shift()) !== undefined) {\n    _deleteMessageFromDOM(message.id);\n  }\n};\n\n/**\n * Deletes a single message from KITT and removes it from the DOM\n *\n * @param msgID\n * @method deleteMessage\n */\nvar deleteMessage = function(msgID) {\n  var messagesLength = _messages.length;\n  // Remove from array of messages\n  _messages = _messages.filter(function(message) {\n    return message.id !== msgID;\n  });\n  // If message id was not found, log a notice to console.\n  if (messagesLength === _messages.length) {\n    _logMessage('deleteMessage() did not find the message with the id', msgID);\n    return;\n  }\n  _deleteMessageFromDOM(msgID);\n};\n\n\n\n/**\n * Draws a message to the GUI\n *\n * @param string contents The contents of the message (text or HTML)\n * @param Object options Options for this message\n * @method addMessage\n */\nvar addMessage = function(contents, options) {\n  // @TODO: Add settings objects details in doc\n  return _addMessage(contents, options);\n};\n\n/**\n * Call to hide the GUI.\n *\n * Interface must have been previously rendered with render()\n *\n * @method hide\n */\nvar hide = function() {\n  if (!_guiCreated()) {\n    _logMessage('cannot hide interface. Must be rendered first');\n  }\n  _guiNodes.classList.add('progressivekitt-ui--hidden');\n};\n\n/**\n * Call to show the GUI if it has been hidden with hide()\n *\n * Interface must have been previously rendered with render()\n *\n * @method show\n */\nvar show = function() {\n  if (!_guiCreated()) {\n    _logMessage('cannot show interface. Must be rendered first');\n  }\n  _guiNodes.classList.remove('progressivekitt-ui--hidden');\n};\n\n/**\n * Turn output of debug messages to the console on or off.\n *\n * * Debug is off by default.\n * * Calling with no arguments will turn debug on.\n *\n * Examples:\n * ````javascript\n * ProgressiveKITT.debug();       // turns debug messages on\n * ProgressiveKITT.debug(true);   // turns debug messages on\n * ProgressiveKITT.debug(false);  // turns debug messages off\n * ````\n *\n * @param {boolean} [newState=true] - Turn on/off debug messages\n * @method debug\n */\nvar debug = function(newState) {\n  if (arguments.length > 0) {\n    _debugState = !!newState;\n  } else {\n    _debugState = true;\n  }\n};\n\n\nmodule.exports = {\n  setStylesheet:    setStylesheet,\n  vroom:            vroom,\n  render:           render,\n  addMessage:       addMessage,\n  deleteMessages:   deleteMessages,\n  deleteMessage:    deleteMessage,\n  show:             show,\n  hide:             hide,\n  debug:            debug\n};\n"]}